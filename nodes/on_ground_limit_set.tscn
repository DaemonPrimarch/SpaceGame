[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]

script/source = "tool
extends Area2D

var camera_bodies_inside = {}

func _ready():
	set_physics_process(not Engine.editor_hint)
	
	connect(\"body_entered\", self, \"entered\")
	connect(\"body_exited\", self, \"exited\")
	
func entered(thing):
	if(thing.is_in_group(\"carries_camera\")):
		for child in thing.get_children():
			if(child.is_in_group(\"extended_camera\")):
				add_camera_limit_rect(thing, child.get_limit_area())

func exited(thing):
	if(thing.is_in_group(\"carries_camera\")):
		remove_camera_limit_rect(thing, camera_bodies_inside[thing])

func get_area():
	return get_parent()
	
func add_camera_limit_rect(body, rect):
	for child in body.get_children():
		if(child.is_in_group(\"extended_camera\")):
			child.add_limit_area(rect)
	
	camera_bodies_inside[body] = rect

func remove_camera_limit_rect(body, rect):
	for child in body.get_children():
		if(child.is_in_group(\"extended_camera\")):
			child.remove_limit_area(rect)
	
	camera_bodies_inside.erase(body)
	
func _physics_process(delta):
	for body in camera_bodies_inside:
		for child in body.get_children():
			if(child.is_in_group(\"extended_camera\") and child.get_limit_area() != get_area() and (body.is_grounded() or body.get_node(\"track_manager\").is_on_track())):
				remove_camera_limit_rect(body, camera_bodies_inside[body])
				add_camera_limit_rect(body, get_area())"

[node name="on_ground_limit_set" type="Area2D" index="0"]

input_pickable = true
gravity_vec = Vector2( 0, 1 )
gravity = 98.0
linear_damp = 0.1
angular_damp = 1.0
audio_bus_override = false
audio_bus_name = "Master"
script = SubResource( 1 )


